public class jdk.net.SocketFlow extends java.lang.Object
{
    private static final int UNSET;
    public static final int NORMAL_PRIORITY;
    public static final int HIGH_PRIORITY;
    private int priority;
    private long bandwidth;
    private jdk.net.SocketFlow$Status status;

    private void <init>()
    {
        jdk.net.SocketFlow r0;
        jdk.net.SocketFlow$Status $r1;

        r0 := @this: jdk.net.SocketFlow;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<jdk.net.SocketFlow: int priority> = 1;

        r0.<jdk.net.SocketFlow: long bandwidth> = -1L;

        $r1 = <jdk.net.SocketFlow$Status: jdk.net.SocketFlow$Status NO_STATUS>;

        r0.<jdk.net.SocketFlow: jdk.net.SocketFlow$Status status> = $r1;

        return;
    }

    public static jdk.net.SocketFlow create()
    {
        jdk.net.SocketFlow $r0;

        $r0 = new jdk.net.SocketFlow;

        specialinvoke $r0.<jdk.net.SocketFlow: void <init>()>();

        return $r0;
    }

    public jdk.net.SocketFlow priority(int)
    {
        jdk.net.SocketFlow r0;
        int i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: jdk.net.SocketFlow;

        i0 := @parameter0: int;

        if i0 == 1 goto label1;

        if i0 == 2 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid priority");

        throw $r1;

     label1:
        r0.<jdk.net.SocketFlow: int priority> = i0;

        return r0;
    }

    public jdk.net.SocketFlow bandwidth(long)
    {
        jdk.net.SocketFlow r0;
        long l0;
        byte $b1;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: jdk.net.SocketFlow;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 >= 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid bandwidth");

        throw $r1;

     label1:
        r0.<jdk.net.SocketFlow: long bandwidth> = l0;

        return r0;
    }

    public int priority()
    {
        jdk.net.SocketFlow r0;
        int $i0;

        r0 := @this: jdk.net.SocketFlow;

        $i0 = r0.<jdk.net.SocketFlow: int priority>;

        return $i0;
    }

    public long bandwidth()
    {
        jdk.net.SocketFlow r0;
        long $l0;

        r0 := @this: jdk.net.SocketFlow;

        $l0 = r0.<jdk.net.SocketFlow: long bandwidth>;

        return $l0;
    }

    public jdk.net.SocketFlow$Status status()
    {
        jdk.net.SocketFlow r0;
        jdk.net.SocketFlow$Status $r1;

        r0 := @this: jdk.net.SocketFlow;

        $r1 = r0.<jdk.net.SocketFlow: jdk.net.SocketFlow$Status status>;

        return $r1;
    }

    public static void <clinit>()
    {
        <jdk.net.SocketFlow: int HIGH_PRIORITY> = 2;

        <jdk.net.SocketFlow: int NORMAL_PRIORITY> = 1;

        <jdk.net.SocketFlow: int UNSET> = -1;

        return;
    }
}
